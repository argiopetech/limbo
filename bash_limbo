#!/bin/bash

function runTests() {
    sh -c "$1" &>/dev/null
    return;
}

function wip() {
    local COMMIT_MESSAGE="Limbo-ing! See tags/releases for what you'd normally expect in a commit message."
    git add . && git commit -m "${COMMIT_MESSAGE}"
}

function revert() {
    git reset --hard
}

function tc() {
    #    runTests || ( local RET=$?; stack test; return $RET; ) && echo && wip
    return;
}

function tcr() {
    tc || revert
}

function tcr-sync() {
        reset

        tcr
        local TCR_RET=$?

        while ( git rev-parse master@{upstream} &>/dev/null && ! git pull -q --rebase ); do
            echo "Press <enter> to re-try the pull."
            read
        done

        local PULL_RET=$?
        
        if [ $TCR_RET -eq 0 -a $PULL_RET -eq 0 ]; then
            # If the tests passed the first time, and a pull was performed, test
            # to ensure the rebase didn't break enything
            #
            # Try running the tests silently, then run them loudly if they fail
            # Push only if tests pass on the first go
            runTests &>/dev/null || ( clear; runTests ; false; ) && git push
        fi
}

function limbo() {
    while : ; do
        tcr-sync
        
        echo
        read -s -p "<enter> to test && commit || revert "
    done
}
